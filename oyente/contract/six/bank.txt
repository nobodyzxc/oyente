WARNING:root:You are using evm version 1.8.15. The supported version is 1.7.3
INFO:root:contract ./bank.sol:Bank:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 98.8%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:ALL PATH CONDITIONS
INFO:symExec:PATH 1: [0 <= Iv, init_Is >= Iv, 0 <= init_Ia]
INFO:symExec:PATH 2: [0 <= Iv, init_Is >= Iv, 0 <= init_Ia, Not(If(ULE(4, Id_size), 0, 1) != 0), Not(If(Extract(255, 224, Id_1) == 889648461, 1, 0) != 0), Not(If(Extract(255, 224, Id_1) == 1198737554, 1, 0) != 0), If(Extract(255, 224, Id_1) == 1608042256, 1, 0) != 0, If(Iv == 0, 1, 0) != 0, Ia_store-some_var_3-userBalances[msg.sender] <= init_Ia + Iv]
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 True
INFO:symExec:./bank.sol:14:37: Warning: Integer Overflow.
         userBalances[msg.sender] = userBalances[msg.sender] + msg.value
Integer Overflow occurs if:
    userBalances[msg.sender] = 1
INFO:symExec:./bank.sol:20:14: Warning: Re-Entrancy Vulnerability.
         if (msg.sender.call.value(amountToWithdraw)()
INFO:symExec:	====== Analysis Completed ======
block number: 27
instruction count: 338
path count: 9
max cost gas: 6737
max cost path: [0, 13, 65, 76, 233, 245, 369, 596, 254]
path stack sum (max, min, avg): (2, 0, 1.2222222222222223)
========================================
path: [0, 98]
stack sum: 0
path constraints:
[0 <= Iv, init_Is >= Iv, 0 <= init_Ia, If(ULE(4, Id_size), 0, 1) != 0]
gas: 40
========================================
path: [0, 13, 103, 115, 266, 124]
stack sum: 1
path constraints:
[0 <= Iv,
 init_Is >= Iv,
 0 <= init_Ia,
 Not(If(ULE(4, Id_size), 0, 1) != 0),
 If(Extract(255, 224, Id_1) == 889648461, 1, 0) != 0,
 If(Iv == 0, 1, 0) != 0]
gas: 598
========================================
path: [0, 13, 103, 111]
stack sum: 2
path constraints:
[0 <= Iv,
 init_Is >= Iv,
 0 <= init_Ia,
 Not(If(ULE(4, Id_size), 0, 1) != 0),
 If(Extract(255, 224, Id_1) == 889648461, 1, 0) != 0,
 Not(If(Iv == 0, 1, 0) != 0)]
gas: 106
========================================
path: [0, 13, 65, 146, 158, 297, 211]
stack sum: 1
path constraints:
[0 <= Iv,
 init_Is >= Iv,
 0 <= init_Ia,
 Not(If(ULE(4, Id_size), 0, 1) != 0),
 Not(If(Extract(255, 224, Id_1) == 889648461, 1, 0) != 0),
 If(Extract(255, 224, Id_1) == 1198737554, 1, 0) != 0,
 If(Iv == 0, 1, 0) != 0]
gas: 458
========================================
path: [0, 13, 65, 146, 154]
stack sum: 2
path constraints:
[0 <= Iv,
 init_Is >= Iv,
 0 <= init_Ia,
 Not(If(ULE(4, Id_size), 0, 1) != 0),
 Not(If(Extract(255, 224, Id_1) == 889648461, 1, 0) != 0),
 If(Extract(255, 224, Id_1) == 1198737554, 1, 0) != 0,
 Not(If(Iv == 0, 1, 0) != 0)]
gas: 128
========================================
path: [0, 13, 65, 76, 233, 245, 369, 596, 254]
stack sum: 1
path constraints:
[0 <= Iv,
 init_Is >= Iv,
 0 <= init_Ia,
 Not(If(ULE(4, Id_size), 0, 1) != 0),
 Not(If(Extract(255, 224, Id_1) == 889648461, 1, 0) != 0),
 Not(If(Extract(255, 224, Id_1) == 1198737554, 1, 0) != 0),
 If(Extract(255, 224, Id_1) == 1608042256, 1, 0) != 0,
 If(Iv == 0, 1, 0) != 0,
 Ia_store-some_var_3-userBalances[msg.sender] <= init_Ia + Iv,
 True]
gas: 6737 with gas assignments
gas assignments:
 0:(!(Ia_store-some_var_3-userBalances[msg.sender] != 0) ? 0 : 9000){Id_1 : 43352733460284595907259723709317083224722273442619959424045366794894018871296,
 Id_size : 4,
 Ia_store-some_var_3-userBalances{msg.sender} : 0,
 Iv : 0}
========================================
path: [0, 13, 65, 76, 233, 241]
stack sum: 2
path constraints:
[0 <= Iv,
 init_Is >= Iv,
 0 <= init_Ia,
 Not(If(ULE(4, Id_size), 0, 1) != 0),
 Not(If(Extract(255, 224, Id_1) == 889648461, 1, 0) != 0),
 Not(If(Extract(255, 224, Id_1) == 1198737554, 1, 0) != 0),
 If(Extract(255, 224, Id_1) == 1608042256, 1, 0) != 0,
 Not(If(Iv == 0, 1, 0) != 0)]
gas: 150
========================================
path: [0, 13, 65, 76, 87, 256, 667, 264]
stack sum: 1
path constraints:
[0 <= Iv,
 init_Is >= Iv,
 0 <= init_Ia,
 Not(If(ULE(4, Id_size), 0, 1) != 0),
 Not(If(Extract(255, 224, Id_1) == 889648461, 1, 0) != 0),
 Not(If(Extract(255, 224, Id_1) == 1198737554, 1, 0) != 0),
 Not(If(Extract(255, 224, Id_1) == 1608042256, 1, 0) != 0),
 If(Extract(255, 224, Id_1) == 3236108283, 1, 0) != 0]
gas: 5482 with gas assignments
gas assignments:
 5000(Gsreset):(!(Ia_store-some_var_5-userBalances[msg.sender] == 0 
&& Ia_store-some_var_5-userBalances[msg.sender] + Iv != 0)
? 5000 : 20000)){Ia_store-some_var_5-userBalances{msg.sender} : 115792089237316195423570985008687907853269984665640564039457584007913129639935,
 Iv : 0,
 Id_1 : 87245306718804429448271346749990192606558032802250798509661254108691591856128,
 Id_size : 4}
========================================
path: [0, 13, 65, 76, 87, 98]
stack sum: 1
path constraints:
[0 <= Iv,
 init_Is >= Iv,
 0 <= init_Ia,
 Not(If(ULE(4, Id_size), 0, 1) != 0),
 Not(If(Extract(255, 224, Id_1) == 889648461, 1, 0) != 0),
 Not(If(Extract(255, 224, Id_1) == 1198737554, 1, 0) != 0),
 Not(If(Extract(255, 224, Id_1) == 1608042256, 1, 0) != 0),
 Not(If(Extract(255, 224, Id_1) == 3236108283, 1, 0) != 0)]
gas: 151

-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-

{'money_concurrency_bug': [[], [579]], 'reentrancy_bug': [579], 'time_dependency_bug': [{}, {3: 12, 4: 64, 5: 75, 6: 86, 7: 240, 8: 579}], 'assertion_failure': [], 'integer_underflow': [], 'integer_overflow': [Overflow(pc=732, model=[Ia_store-some_var_5-userBalances[msg.sender] = 1,
 Iv = 115792089237316195423570985008687907853269984665640564039457584007913129639935,
 Id_1 = 87245306718804429448271346749990192606558032802250798509661254108691591856128,
 Id_size = 4])]}
